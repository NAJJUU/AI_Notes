* 텐서플로
    1) 텐서(Tensor)
        -행렬로 표현할 수 있는 2차원 형태의 배열을 높은 차원으로 확장한 다차원 배열
    2) 텐서플로의 계산은 데이터 흐름 그래프(dataflow graph)로 이루어짐
    3) 텐서 형태의 데이터들이 딥러닝 모델을 구성하는 연산들의
        그래프를 따라 연산이 일어나기 때문에 텐서플로라는 이름이 붙음
    4) 기능
        -사전학습 모델 제공
        -고수준(High-level) API 제공
            -텐서보드 및 keras와 같은 추상화 라이브러리 제공

* 하이퍼 파라미터
    1) (배경)은닉층의 수와 유닛 수
        -보통 각 은닉층의 뉴런은 정규화 기술이 적용되어 모델의 정확도를 높이는데 기여
        -뉴런의 개수와 레이어의 깊이는 overfittin 혹은 underfitting에 영향을 주기때문에 적절한 수의 층이 중요
    2) 가중치 초기화
        -각 층에서 사용되는 활성화 함수에 따라서 적절한 Weight 초기화 기법을 사용하는 것이 좋음
            -ReLU, Leaky ReLU 등을 이용한다면 He initialization(He 초기화)를 사용
    3) 학습률(Learning_rate)
        -딥러닝의 학습은 모델로부터 얻은 예측값(output 또는 y)과 기대값(desired output 또는 label)과의
            차이를 계산하여 얻은 비용(Cost)
            =>가중치(Weight)간의 gradient를 이용하여 기존 Weight를 업데이트하는 방식으로 이루어짐
            -이떄 gradient를 얼만큼 이동할지 정하는 것이 학습율 하이퍼 파라미터임
    4) 모멘텀(Momentum)
        -Gradient Decent에 대한 최적화 기법 중 하나로 Global Minimun에 도달하기 위해
            학습하는 과정에서 가중치(W)를 업데이트함
        -업데이트하는데에 가속도를 주어 Weight가 감소하거나 증가하는 방향으로 더 많은 변화를 줌
        -모멘텀을 적용하는 이유는 학습횟수를 줄이고 효율화하기 위함
    5) 에폭(Epoch)
        -학습을 반복하는 횟수
        -모델이 전체 데이터셋에 대하여 Feedforward와 Backpropagation을 거친 것을 의미
        -에폭을 한 번 거쳤으면 학습을 한번 완료했다는 의미임
    6) 배치 사이즈(Batch Size)
        -한번의 batch마다 주는 데이터 샘플 사이즈